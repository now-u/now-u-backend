# Generated by Django 4.2.2 on 2023-07-22 23:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('release_at', models.DateTimeField(blank=True, help_text='The date from which this resource should be available in the app. If not provided the resource will not be visible', null=True)),
                ('end_at', models.DateTimeField(blank=True, help_text='The date from which this resource should no longer be available in the app. If not provided the reosurce will stay visible after its released', null=True)),
                ('enabled', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('link', models.URLField()),
                ('action_type', models.CharField(choices=[('VOLUNTEER', 'Volunteer'), ('DONATE', 'Donate'), ('PURCHASE', 'Purchase'), ('FUNDRAISE', 'Fundraise'), ('RAISE_AWARENESS', 'Raise awareness'), ('SIGN', 'Sign'), ('BEHAVIOR', 'Behavior change'), ('CONTACT', 'Contact'), ('PROTEST', 'Protest'), ('CONNECT', 'Connect'), ('LEARN', 'Learn'), ('QUIZ', 'Quiz'), ('OTHER', 'Other')], max_length=24)),
                ('what_description', models.TextField()),
                ('why_description', models.TextField()),
                ('time', models.IntegerField()),
                ('of_the_month', models.BooleanField(default=False)),
                ('suggested', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('release_at', models.DateTimeField(blank=True, help_text='The date from which this resource should be available in the app. If not provided the resource will not be visible', null=True)),
                ('end_at', models.DateTimeField(blank=True, help_text='The date from which this resource should no longer be available in the app. If not provided the reosurce will stay visible after its released', null=True)),
                ('enabled', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('short_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('of_the_month', models.BooleanField(default=False)),
                ('suggested', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('icon', models.CharField(choices=[('cause_icon_education', 'Education'), ('cause_icon_environment', 'Environment'), ('cause_icon_health_wellbeing', 'Health Wellbeing'), ('cause_icon_safe_home_community', 'Safe Home Community'), ('cause_icon_economic_opportunity', 'Economic Opportunity'), ('cause_icon_equality_human_rights', 'Equility Human Rights')], max_length=40)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='LearningResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('release_at', models.DateTimeField(blank=True, help_text='The date from which this resource should be available in the app. If not provided the resource will not be visible', null=True)),
                ('end_at', models.DateTimeField(blank=True, help_text='The date from which this resource should no longer be available in the app. If not provided the reosurce will stay visible after its released', null=True)),
                ('enabled', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('time', models.IntegerField()),
                ('link', models.URLField()),
                ('learning_resource_type', models.CharField(choices=[('VIDEO', 'Video'), ('READING', 'Reading'), ('INFOGRAPHIC', 'Infographic'), ('LISTEN', 'Listen'), ('OTHER', 'Other')], max_length=24)),
                ('source', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('release_at', models.DateTimeField(blank=True, help_text='The date from which this resource should be available in the app. If not provided the resource will not be visible', null=True)),
                ('end_at', models.DateTimeField(blank=True, help_text='The date from which this resource should no longer be available in the app. If not provided the reosurce will stay visible after its released', null=True)),
                ('enabled', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=64)),
                ('subtitle', models.CharField(max_length=100)),
                ('source', models.CharField(max_length=100)),
                ('link', models.URLField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('release_at', models.DateTimeField(blank=True, help_text='The date from which this resource should be available in the app. If not provided the resource will not be visible', null=True)),
                ('end_at', models.DateTimeField(blank=True, help_text='The date from which this resource should no longer be available in the app. If not provided the reosurce will stay visible after its released', null=True)),
                ('enabled', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('organisation_type', models.CharField(choices=[('CHARITY', 'Charity'), ('SOCIAL_ENTERPRISE', 'Social Enterprise'), ('UNKNOWN', 'Unknown - Please fix')], max_length=24)),
                ('website_link', models.URLField(blank=True, null=True)),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('geographic_reach', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram_link', models.URLField(blank=True, null=True)),
                ('facebook_link', models.URLField(blank=True, null=True)),
                ('twitter_link', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganisationExtraLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('link', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='UserAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserCause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserLearningResources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('learning_resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='causes.learningresource')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
